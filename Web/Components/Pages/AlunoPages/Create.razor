@page "/alunos/create"
@using Domain.Entities
@using Web.Services
@inject NavigationManager NavigationManager
@inject HttpService _httpService
@rendermode InteractiveServer

<PageTitle>Criar aluno</PageTitle>

<h4>Criar aluno</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Aluno" OnValidSubmit="AddAluno" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="nome" class="form-label">Nome:</label> 
                <InputText id="nome" @bind-Value="@Aluno.Nome" class="form-control" /> 
                <ValidationMessage For="() => Aluno.Nome" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="usuario" class="form-label">Usuario:</label> 
                <InputText id="usuario" @bind-Value="@Aluno.Usuario" class="form-control" /> 
                <ValidationMessage For="() => Aluno.Usuario" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="senha" class="form-label">senha:</label> 
                <InputText id="senha" @bind-Value="@Aluno.senha" class="form-control" /> 
                <ValidationMessage For="() => Aluno.senha" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/alunos">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Domain.Entities.Aluno Aluno { get; set; } = new();

    public async Task AddAluno()
    {
        await _httpService.HttpPost<Domain.Entities.Aluno>($"api/Aluno", Aluno);

        NavigationManager.NavigateTo("/");
    }
}
