@page "/turmas/create"
@using Domain.Entities
@using Web.Services
@inject NavigationManager NavigationManager
@inject HttpService _httpService
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Turma</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="turma" OnValidSubmit="AddTurma" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="nome" class="form-label">Nome:</label> 
                <InputText id="nome" @bind-Value="@turma.Nome" class="form-control" />
                <ValidationMessage For="() => turma.Nome" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="ano" class="form-label">Ano:</label> 
                <InputNumber id="ano" @bind-Value="@turma.Ano" class="form-control" />
                <ValidationMessage For="() => turma.Ano" class="text-danger" />
            </div>     
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/turmas">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Domain.Entities.Turma turma { get; set; } = new();

    public async Task AddTurma()
    {
        await _httpService.HttpPost<Domain.Entities.Aluno>($"api/Turma", turma);

        NavigationManager.NavigateTo("/listTurma");
    }
}
